class Solution {
public:
    int numFriendRequests(vector<int>& ages) {
        int requests = 0;
        sort(ages.begin(),ages.end());
        for (int i = 0; i < ages.size(); i++) {
            int age = ages[i];
            if (age <= 14) continue; 
            int minAge = 0.5 * age + 7;
            auto lower = upper_bound(ages.begin(), ages.end(), minAge) - ages.begin();
            auto upper = upper_bound(ages.begin(), ages.end(), age) - ages.begin();
            requests += (upper - lower) - 1; 
        }
        return requests;
    }
};
