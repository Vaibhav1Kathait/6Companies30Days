class Solution {
public:
    static bool comp(pair<string,int>& a, pair<string,int>& b) {
        if (a.second == b.second) {
            return a.first<b.first;  
        }
        return a.second>b.second;
    }
    vector<string> topKFrequent(vector<string>& words, int k) {
        unordered_map<string, int>mp;
        for (auto& word : words) {
            mp[word]++;
        }
        vector<pair<string, int>> freq(mp.begin(), mp.end());
        sort(freq.begin(),freq.end(),comp);
        vector<string> ans;
        for (int i = 0; i < k; ++i) {
            ans.push_back(freq[i].first);
        }
        return ans;
    }
};
